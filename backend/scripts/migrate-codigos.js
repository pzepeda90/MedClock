#!/usr/bin/env node

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import db from '../database/database.js';
import chalk from 'chalk';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Ruta del archivo de migraci√≥n
const migrationFile = path.join(__dirname, '../database/migrations/02_codigos_procedimientos.sql');

async function executeMigration() {
  try {
    console.log(chalk.blue('üìù Leyendo archivo de migraci√≥n...'));
    
    const migration = fs.readFileSync(migrationFile, 'utf8');
    
    console.log(chalk.blue('üîÑ Conectando a la base de datos...'));
    
    console.log(chalk.blue('üöÄ Ejecutando migraci√≥n...'));
    await db.query(migration);
    
    console.log(chalk.green('‚úÖ Migraci√≥n completada exitosamente'));
    
    // Insertar algunos ejemplos de c√≥digos Fonasa si se solicita
    const args = process.argv.slice(2);
    if (args.includes('--with-samples')) {
      console.log(chalk.blue('üå± Insertando datos de ejemplo...'));
      await insertSampleData();
      console.log(chalk.green('‚úÖ Datos de ejemplo insertados correctamente'));
    }
    
  } catch (error) {
    console.error(chalk.red('‚ùå Error al ejecutar la migraci√≥n:'), error);
    process.exit(1);
  } finally {
    // Cerrar la conexi√≥n a la base de datos
    try {
      await db.end();
      console.log(chalk.blue('üëã Conexi√≥n a la base de datos cerrada'));
    } catch (error) {
      console.error(chalk.red('‚ùå Error al cerrar la conexi√≥n:'), error);
    }
  }
}

async function insertSampleData() {
  // C√≥digos de ejemplo para Fonasa
  const fonasaCodes = [
    { codigo: 'F001', nombre: 'Consulta m√©dica general', descripcion: 'Consulta m√©dica de atenci√≥n primaria', tipo: 'fonasa', precio_referencia: 15000 },
    { codigo: 'F002', nombre: 'Consulta m√©dica especialista', descripcion: 'Consulta m√©dica con especialista', tipo: 'fonasa', precio_referencia: 25000 },
    { codigo: 'F003', nombre: 'Radiograf√≠a simple', descripcion: 'Radiograf√≠a de una zona anat√≥mica', tipo: 'fonasa', precio_referencia: 18000 },
    { codigo: 'F004', nombre: 'Ecograf√≠a abdominal', descripcion: 'Ecograf√≠a de abdomen completo', tipo: 'fonasa', precio_referencia: 30000 },
    { codigo: 'F005', nombre: 'Electrocardiograma', descripcion: 'Registro de la actividad el√©ctrica del coraz√≥n', tipo: 'fonasa', precio_referencia: 12000 },
    { codigo: 'F006', nombre: 'Hemograma completo', descripcion: 'An√°lisis completo de sangre', tipo: 'fonasa', precio_referencia: 8000 },
    { codigo: 'F007', nombre: 'Perfil bioqu√≠mico', descripcion: 'An√°lisis bioqu√≠mico de sangre', tipo: 'fonasa', precio_referencia: 15000 },
    { codigo: 'F008', nombre: 'Consulta psicol√≥gica', descripcion: 'Atenci√≥n con psic√≥logo cl√≠nico', tipo: 'fonasa', precio_referencia: 22000 }
  ];

  // C√≥digos de ejemplo para Isapre
  const isapreCodes = [
    { codigo: 'I001', nombre: 'Consulta m√©dica general', descripcion: 'Consulta m√©dica de atenci√≥n primaria', tipo: 'isapre', precio_referencia: 18000 },
    { codigo: 'I002', nombre: 'Consulta m√©dica especialista', descripcion: 'Consulta m√©dica con especialista', tipo: 'isapre', precio_referencia: 35000 },
    { codigo: 'I003', nombre: 'Radiograf√≠a simple', descripcion: 'Radiograf√≠a de una zona anat√≥mica', tipo: 'isapre', precio_referencia: 25000 },
    { codigo: 'I004', nombre: 'Resonancia magn√©tica', descripcion: 'Resonancia magn√©tica de una regi√≥n anat√≥mica', tipo: 'isapre', precio_referencia: 120000 }
  ];

  // C√≥digos de ejemplo para atenci√≥n particular
  const particularCodes = [
    { codigo: 'P001', nombre: 'Consulta m√©dica general', descripcion: 'Consulta m√©dica de atenci√≥n primaria', tipo: 'particular', precio_referencia: 25000 },
    { codigo: 'P002', nombre: 'Consulta m√©dica especialista', descripcion: 'Consulta m√©dica con especialista', tipo: 'particular', precio_referencia: 50000 },
    { codigo: 'P003', nombre: 'Cirug√≠a menor', descripcion: 'Procedimiento quir√∫rgico menor', tipo: 'particular', precio_referencia: 150000 },
    { codigo: 'P004', nombre: 'Cirug√≠a mayor ambulatoria', descripcion: 'Procedimiento quir√∫rgico mayor sin hospitalizaci√≥n', tipo: 'particular', precio_referencia: 350000 }
  ];

  // Combinar todos los c√≥digos
  const allCodes = [...fonasaCodes, ...isapreCodes, ...particularCodes];

  // Insertar c√≥digos en la base de datos
  for (const code of allCodes) {
    try {
      const query = `
        INSERT INTO codigos_procedimientos (codigo, nombre, descripcion, tipo, precio_referencia, activo)
        VALUES ($1, $2, $3, $4, $5, true)
        ON CONFLICT (codigo) DO NOTHING
      `;
      
      await db.query(query, [
        code.codigo,
        code.nombre,
        code.descripcion,
        code.tipo,
        code.precio_referencia
      ]);
      
      console.log(chalk.green(`‚úì C√≥digo insertado: ${code.codigo} - ${code.nombre}`));
    } catch (error) {
      console.error(chalk.red(`‚úó Error al insertar c√≥digo ${code.codigo}:`), error.message);
    }
  }
}

// Ejecutar la migraci√≥n
executeMigration(); 